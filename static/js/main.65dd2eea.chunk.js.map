{"version":3,"sources":["Questions/Navbar.js","Questions/Q1.js","Questions/Q2.js","Questions/Q3.js","Questions/Q4.png","Questions/Q4.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","href","Q1","props","input","HeatMapChart","data","i","undefined","value","push","state","series","name","options","chart","height","type","plotOptions","heatmap","shadeIntensity","radius","useFillColorAsStroke","colorScale","ranges","from","to","color","dataLabels","enabled","title","text","id","this","React","Component","Q2","useState","load1","setLoad1","load2","setLoad2","onClick","Component1","Component2","observable","defer","console","log","Population","Promise","resolve","reject","window","setTimeout","pipe","shareReplay","cities","setCities","useEffect","subscribe","x","map","city","City","Q3","countries","setCountries","getCountryAndCities","countryName","country","israel","capital","language","citiesNames","england","citiescitiesNames","spain","APIGetCountry","then","ans","favoriteCountriesNames","includes","all","Jerusalem","Haifa","APIGetCities","values","countriesNames","Country","Q4","src","uml","alt","width","q1Input","timestamp","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65dd2eea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav >\r\n            <div >\r\n                <div >\r\n                    <div >\r\n                        <a  href=\"/\">Q1</a>\r\n                        <span>   </span>\r\n                        <a  href=\"/Q2\">Q2</a>\r\n                        <span>   </span>\r\n                        <a  href=\"/Q3\">Q3</a>\r\n                        <span>   </span>\r\n                        <a href=\"/Q4\">Q4</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nexport const Q1 = (props) => {\r\n\r\n          \r\n\r\n    return (\r\n\r\n\r\n\r\n        <div>\r\n            <h1>Q1</h1>\r\n            <HeatMapChart input={props.input}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nclass HeatMapChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // let data = props.input.map((obj)=>{\r\n        //     if(obj!=null && obj.value!=undefined && obj.value>0){\r\n        //         return obj.value\r\n        //     }\r\n        // })\r\n\r\n        let data = []\r\n        for(let i=0 ;i<10000;i++){\r\n            if(props.input[i]!=null && props.input[i].value!=undefined && props.input[i].value>0){\r\n                data.push(props.input[i].value)\r\n            }\r\n        }\r\n        this.state = {\r\n          \r\n            series: [{\r\n                name: '',\r\n                data: data\r\n              }\r\n            ],\r\n\r\n            options: {\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'heatmap',\r\n                },\r\n                plotOptions: {\r\n                    heatmap: {\r\n                        shadeIntensity: 0.5,\r\n                        radius: 0,\r\n                        useFillColorAsStroke: true,\r\n                        colorScale: {\r\n                            ranges: [{\r\n                                from: 0,\r\n                                to: 24,\r\n                                name: 'low',\r\n                                color: '#00ff00'\r\n                            },\r\n                            {\r\n                                from: 25,\r\n                                to: 75,\r\n                                name: 'medium',\r\n                                color: '#ffff00'\r\n                            },\r\n                            {\r\n                                from: 75,\r\n                                to: 100,\r\n                                name: 'high',\r\n                                color: '#ff0000'\r\n                            }\r\n                            ]\r\n                        }\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: true\r\n                },\r\n              title: {\r\n                text: 'HeatMap Chart'\r\n              },\r\n            },\r\n          \r\n          \r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"heatmap\" height={350} />\r\n            </div>);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { defer } from 'rxjs';\r\nimport { shareReplay} from \"rxjs/operators\";\r\n\r\nexport const Q2 = () => {\r\n\r\n    const [load1, setLoad1] = useState(false)\r\n    const [load2, setLoad2] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Q2</h1>\r\n            <button onClick={()=>{setLoad1(!load1);setLoad2(!load2) }}>Load 1 and 2</button>\r\n            <div></div>\r\n\r\n            <button onClick={()=>setLoad1(!load1)}>Load 1</button>\r\n            {load1 && <Component1 />}\r\n            <div></div>\r\n\r\n            <button onClick={()=>setLoad2(!load2)}>Load 2</button>\r\n            {load2 && <Component2  />}\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nconst observable = defer(APIGetCities).pipe(shareReplay())\r\n\r\n\r\nfunction Component1(){\r\n    \r\n    const [cities, setCities] = useState(null)\r\n    console.log(\"render1\")\r\n    useEffect(()=>{\r\n        observable.subscribe(x=>setCities(x))\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <h3>Component 1</h3>\r\n            {cities && cities.map(city=>{\r\n                return <City key={city.name} city={city}/>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction Component2(){\r\n    const [cities, setCities] = useState(null)\r\n    console.log(\"render2\")\r\n    useEffect(()=>{\r\n        observable.subscribe(x=>setCities(x))\r\n    },[])\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <h3>Component 2</h3>\r\n            {cities && cities.map(city=>{\r\n                return <City key={city.name} city={city}/>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction City(props) {\r\n    return (\r\n        <div>\r\n            <div>name: {props.city.name}</div>\r\n            <div>population: {props.city.Population}</div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction APIGetCities(){\r\n    console.log(\"api\")\r\n    const data = [\r\n        { name: \"Jerusalem\", Population : 936425 },\r\n        { name: \"Tel-Aviv\", Population: 460613 },\r\n        { name: \"Haifa\", Population: 285316}\r\n    ]\r\n    var promise = new Promise(function (resolve, reject) {\r\n        window.setTimeout(function () {\r\n            resolve(data);\r\n        }, 1000);\r\n    })\r\n    return promise\r\n}\r\n","import React from 'react'\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const Q3 = (props) => {\r\n\r\n    const [countries, setCountries] = useState([])\r\n\r\n    function getCountryAndCities(countryName){\r\n        var promise = new Promise(function (resolve, reject) {\r\n            APIGetCountry(countryName).then((ans)=>{\r\n                if(props.favoriteCountriesNames.includes(countryName)){\r\n                    Promise.all(ans.citiesNames.map((city)=>{\r\n                        return APIGetCities(city)\r\n                    })).then(values=> {ans.cities=values; resolve(ans) })\r\n                }\r\n                else{\r\n                    resolve(ans)  \r\n                } \r\n            })\r\n                   \r\n        })\r\n        return promise\r\n    }\r\n\r\n        useEffect(() => {\r\n            Promise.all(props.countriesNames.map((name) => {\r\n            return getCountryAndCities(name)})).then(values =>{ setCountries(values)})\r\n        }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>  \r\n            <h1>Q3</h1>\r\n            {countries.map(country=>{\r\n                return <Country key={country.name} country={country}/>\r\n            })}\r\n        </>\r\n\r\n\r\n        \r\n\r\n    )\r\n}\r\n\r\nfunction Country(props){\r\n    return(\r\n        <div>\r\n            <div>name: {props.country.name}</div>\r\n            <div>capital: {props.country.capital}</div>\r\n            <div>language: {props.country.language}</div>\r\n            {props.country.cities && <div>\r\n                <div><strong>Cities:</strong></div>\r\n                {\r\n                    props.country.cities.map(city=>{\r\n                        return <City key={city.name} city={city}/>\r\n                    })\r\n                }\r\n            </div>\r\n            }\r\n            <p></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction City(props) {\r\n    return (\r\n        <div>\r\n            <div>name: {props.city.name}</div>\r\n            <div>population: {props.city.Population}</div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction APIGetCities(city){\r\n    const data = {\r\n        Jerusalem: { name: \"Jerusalem\", Population : 936425 },\r\n        \"Tel-Aviv\": { name: \"Tel-Aviv\", Population: 460613 },\r\n        Haifa: { name: \"Haifa\", Population: 285316}\r\n    }\r\n    var promise = new Promise(function (resolve, reject) {\r\n        window.setTimeout(function () {\r\n            resolve(data[city]);\r\n        }, 1000);\r\n    })\r\n    return promise\r\n\r\n}\r\n\r\nfunction APIGetCountry(country) {\r\n    const data = {israel: { name:\"Israel\", capital:\"Jerusalem\",  language:\"Hebrew\", citiesNames:[\"Jerusalem\",\"Tel-Aviv\",\"Haifa\"]},\r\n            england: { name: \"England\",capital: \"London\", language: \"English\", citiescitiesNames: [\"London\",\"Manchester\"] },\r\n            spain: { name: \"Spain\",capital: \"Madrid\", language: \"Spanish\", citiescitiesNames: [\"Madrid\",\"Barcelona\"] }\r\n    }\r\n    var promise = new Promise(function (resolve, reject) {\r\n        window.setTimeout(function () {\r\n            resolve(data[country]);\r\n        },1000);\r\n    })\r\n    return promise\r\n            \r\n}","export default __webpack_public_path__ + \"static/media/Q4.287344e2.png\";","import React from 'react'\r\nimport uml from './Q4.png';\r\n\r\nexport const Q4 = () => {\r\n    return (\r\n        <div>\r\n            <h1>Q4</h1>\r\n            <img src={uml}  alt=\"\" height=\"1300\" width=\"1300\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst armchairs = {\r\n     ArtDecos : [],\r\n     Victorian : [],\r\n     Modern:[]\r\n}\r\nconst sofas = {\r\n     ArtDecos : [],\r\n     Victorian : [],\r\n     Modern:[]\r\n}\r\nconst tables = {\r\n     ArtDecos : [],\r\n     Victorian : [],\r\n     Modern:[]\r\n}\r\n\r\nclass Product{\r\n    constructor(affiliates1, affiliate2) {\r\n        if (this.constructor === Product ||this.constructor === Armchair || this.constructor === Sofa || this.constructor === Table) {\r\n            throw new TypeError('Abstract class cannot be instantiated directly.'); \r\n        }\r\n        this.affiliates1 = affiliates1\r\n        this.affiliate2 = affiliate2\r\n    }\r\n}\r\n\r\nclass Armchair extends Product{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(affiliates1,affiliate2)\r\n    }\r\n}\r\n\r\nclass ArtDecoArmchair extends Armchair{\r\n    constructor() {\r\n        super(sofas[\"ArtDecos\"],tables[\"ArtDecos\"])\r\n        armchairs[\"ArtDecos\"].push(this)\r\n    }\r\n}\r\n\r\nclass VictorianArmchair extends Armchair{\r\n    constructor() {\r\n        super(sofas[\"Victorian\"],tables[\"Victorian\"])\r\n        armchairs[\"Victorian\"].push(this)\r\n    }\r\n}\r\n\r\nclass ModernArmchair extends Armchair{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(sofas[\"Modern\"],tables[\"Modern\"])\r\n        armchairs[\"Modern\"].push(this)\r\n    }\r\n}\r\n\r\nclass Sofa extends Product{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(affiliates1,affiliate2)\r\n    }\r\n}\r\n\r\nclass ArtDecosSofa extends Sofa{\r\n    constructor() {\r\n        super(armchairs[\"ArtDecos\"],tables[\"ArtDecos\"])\r\n        sofas[\"ArtDecos\"].push(this)\r\n    }\r\n}\r\n\r\nclass VictorianSofa extends Sofa{\r\n    constructor() {\r\n        super(armchairs[\"Victorian\"],tables[\"Victorian\"])\r\n        sofas[\"Victorian\"].push(this)\r\n    }\r\n}\r\n\r\nclass ModernSofa extends Sofa{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(armchairs[\"Modern\"],tables[\"Modern\"])\r\n        sofas[\"Modern\"].push(this)\r\n    }\r\n}\r\n\r\nclass Table extends Product{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(affiliates1,affiliate2)\r\n    }\r\n\r\n}\r\n\r\nclass ArtDecosTable extends Table{\r\n    constructor() {\r\n        super(armchairs[\"ArtDecos\"],sofas[\"ArtDecos\"])\r\n        tables[\"ArtDecos\"].push(this)\r\n    }\r\n}\r\n\r\nclass VictorianTable extends Table{\r\n    constructor() {\r\n        super(armchairs[\"Victorian\"],sofas[\"Victorian\"])\r\n        tables[\"Victorian\"].push(this)\r\n    }\r\n}\r\n\r\nclass ModernTable extends Table{\r\n    constructor(affiliates1, affiliate2) {\r\n        super(armchairs[\"Modern\"],sofas[\"Modern\"])\r\n        tables[\"Modern\"].push(this)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Navbar } from './Questions/Navbar';\nimport { Q1 } from './Questions/Q1';\nimport { Q2 } from './Questions/Q2';\nimport { Q3 } from './Questions/Q3';\nimport { Q4 } from './Questions/Q4';\n\nlet q1Input = [\n    {timestamp : \"01-01-2020T01:23:34\"},\n    {timestamp : \"01-01-2020T01:23:34\",value: 56},\n    {timestamp : \"01-01-2020T01:23:34\",value: -4},\n    {timestamp : \"01-01-2020T01:23:34\",value: 22},\n    {timestamp : \"01-01-2020T01:23:34\",value: 99},\n    {timestamp : \"01-01-2020T01:23:34\",value: 1},\n    {timestamp : \"01-01-2020T01:23:34\",value: 60},\n    {timestamp : \"01-01-2020T01:23:34\",value: 20},\n    {timestamp : \"01-01-2020T01:23:34\",value: 80},\n    {timestamp : \"01-01-2020T01:23:34\",value: 28},\n    \n]\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path='/'>\n          <Q1 input={q1Input}/>\n        </Route>\n        <Route exact path='/Q2'>\n          <Q2 />\n        </Route>\n        <Route exact path='/Q3'>\n          <Q3 countriesNames={[\"israel\", \"england\", \"spain\"]} favoriteCountriesNames={[\"israel\"]}/>\n        </Route>\n        <Route exact path='/Q4'>\n          <Q4 />\n        </Route>\n\n\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}